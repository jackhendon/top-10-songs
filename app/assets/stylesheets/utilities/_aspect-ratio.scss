@use "../variables" as *;
@use "../mixins" as *;

/*! purgecss start ignore */
.aspect-ratio-2x1 { aspect-ratio: 2 / 1; }
.aspect-ratio-16x9 { aspect-ratio: 16 / 9; }
.aspect-ratio-3x2 { aspect-ratio: 3 / 2; }
.aspect-ratio-4x3 { aspect-ratio: 4 / 3; }
.aspect-ratio-1x1 { aspect-ratio: 1; }
.aspect-ratio-2x3 { aspect-ratio: 2 / 3; }
.aspect-ratio-9x16 { aspect-ratio: 9 / 16; }

@include generate-breakpoint-prefixes {
  &aspect-ratio-2x1 { aspect-ratio: 2 / 1; }
  &aspect-ratio-16x9 { aspect-ratio: 16 / 9; }
  &aspect-ratio-3x2 { aspect-ratio: 3 / 2; }
  &aspect-ratio-4x3 { aspect-ratio: 4 / 3; }
  &aspect-ratio-1x1 { aspect-ratio: 1; }
  &aspect-ratio-2x3 { aspect-ratio: 2 / 3; }
  &aspect-ratio-9x16 { aspect-ratio: 9 / 16; }
}

.custom-ratio > :first-child {
  width: 100%;
}

.custom-ratio > img {
  height: auto;
}

@supports (--custom:property) {
  .custom-ratio {
    position: relative;
  }

  .custom-ratio::before {
    content: "";
    display: block;
    padding-bottom: calc(100% / (var(--mobile-ratio)));

    @media screen and (min-width: $screen-sm-min) {
      padding-bottom: calc(100% / (var(--tablet-ratio)));
    }
    @media screen and (min-width: $screen-md-min) {
      padding-bottom: calc(100% / (var(--desktop-ratio)));
    }
  }

  .custom-ratio > img, .custom-ratio > video, .custom-ratio > picture {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }
}
/*! purgecss end ignore */
