@use "../mixins" as *;

// Flexbox utility classes

// Basic flexbox display…
.flex-col { flex-direction: column; }
.flex-col-reverse { flex-direction: column-reverse; }
.flex-row { flex-direction: row; }
.flex-row-reverse { flex-direction: row-reverse; }
.flex-wrap { flex-wrap: wrap; }
.flex-wrap-reverse { flex-wrap: wrap-reverse; }
.flex-nowrap { flex-wrap: nowrap; }

// Aligning items
.items-stretch { align-items: stretch; }
.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.items-baseline { align-items: baseline; }

.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.justify-normal { justify-content: normal; }

@each $flex-num in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {
  .flex-#{$flex-num} { flex: #{$flex-num}; }
}

.flex-shrink { flex-shrink: 1; }
.flex-no-shrink { flex-shrink: 0; }

.flex-order-1 { order: 1; }
.flex-order-2 { order: 2; }
.flex-order-3 { order: 3; }
.flex-order-4 { order: 4; }
.flex-order-5 { order: 5; }
.flex-order-6 { order: 6; }
.flex-order-7 { order: 7; }
.flex-order-8 { order: 8; }
.flex-order-9 { order: 9; }
.flex-order-10 { order: 10; }
.flex-order-11 { order: 11; }

.basis-auto	{ flex-basis: auto; }
.basis-full	{ flex-basis: 100%; }

.self-stretch { align-self: stretch; }
.self-start { align-self: flex-start; }
.self-center { align-self: center; }
.self-end { align-self: flex-end; }
.self-baseline { align-self: baseline; }

// …at different breakpoints
@include generate-breakpoint-prefixes {
  &flex-col { flex-direction: column; }
  &flex-col-reverse { flex-direction: column-reverse; }
  &flex-row { flex-direction: row; }
  &flex-row-reverse { flex-direction: row-reverse; }
  &flex-wrap { flex-wrap: wrap; }
  &flex-wrap-reverse { flex-wrap: wrap-reverse; }
  &flex-nowrap { flex-wrap: nowrap; }

  &items-stretch { align-items: stretch; }
  &items-start { align-items: flex-start; }
  &items-center { align-items: center; }
  &items-end { align-items: flex-end; }
  &items-baseline { align-items: baseline; }

  &justify-start { justify-content: flex-start; }
  &justify-center { justify-content: center; }
  &justify-end { justify-content: flex-end; }
  &justify-between { justify-content: space-between; }
  &justify-around { justify-content: space-around; }
  &justify-normal { justify-content: normal; }

  &self-stretch { align-self: stretch; }
  &self-start { align-self: flex-start; }
  &self-center { align-self: center; }
  &self-end { align-self: flex-end; }
  &self-baseline { align-self: baseline; }


  @each $flex-num in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {
    &flex-#{$flex-num} { flex: #{$flex-num}; }
  }

  &flex-shrink { flex-shrink: 1; }
  &flex-no-shrink { flex-shrink: 0; }

  &flex-order-1 { order: 1; }
  &flex-order-2 { order: 2; }
  &flex-order-3 { order: 3; }
  &flex-order-4 { order: 4; }
  &flex-order-5 { order: 5; }

  &basis-auto	{ flex-basis: auto; }
  &basis-full	{ flex-basis: 100%; }
}

// When used on bootstrap .row classes, the before and after elements can cause issues with the flex layout.
// We don't actually need those elements when using flex though as there are no floated elements to clear.
// Therefore we can safely hide them when those classes are combined.
.flex {
  &.row {
    &:before, &:after {
      display: none;
    }
  }
}
